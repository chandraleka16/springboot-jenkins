def gitRepoName = "https://github.com/chandraleka16/springboot-jenkins.git"

def customLocalImage = "springboot-app"

def dockerPublisherName = "chandraleka1403"
def dockerRepoName = "springboot-app"

properties([pipelineTriggers([githubPush()])])

pipeline {
    agent {
        node {
            label 'slave2'
        }
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "**", url: "${gitRepoName}"
                script {
                    branch = "${GIT_BRANCH}".split('/')[0]
                }
                echo "CHECKING OUT BRANCH:${branch}"
            }
        }

        stage('Build') {
            steps {
                script {
                    if (branch.contains('release') || branch == 'master'){
                        
                        sh "docker rmi ${customLocalImage} || true"
                        sh "docker build -t ${customLocalImage} ."
                        echo "Build Successul"
                    } else if (branch == 'qa' || branch == 'develop') {
                        echo "It is a ${branch} branch"
                    } else if (gitBranch.contains('feature')) {
                        echo "It is a ${branch} branch"
                    }
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    if (branch.contains('release')){
                        def gitTag = "build-${BUILD_NUMBER}"
                        def gitUrl = "https://chandraleka16:Mano3Logesh@github.com/chandraleka16/springboot-jenkins.git"

                        sh "git tag ${gitTag}"
                        sh "git push ${gitUrl} ${gitTag}"
                        def ECR_URL="853973692277.dkr.ecr.us-east-1.amazonaws.com"
                        def ECR_REPO="ac-devops-training"

                        def AWS_PWD="eyJwYXlsb2FkIjoiU3dsekRFdkM2YTV3N01pNzBkWUhwajRBOHhaRkZMMHdTUG5ZdHZIRVFOUXZsaFpLNFQ1TmhsbVdveTVCU0lHdThic0gxSG9yUWlYeXI5ejVodjN1WngwQkV3cXZmOTZxd2djb0o1U3RNSTArYjR6QzRyZzlGeFp0ZDBnK2lrdW9MYVRubkZmc01GcmJpYkdkcldBVjhmMk5yRC9DT3BKODhxYjZZcEZGYWM5dllZbVpRcVo3TDhuek5IL0ZrVXl6d0NoL0RwZTh4b3VLNTNNaTZWK3BkTGJ4cndwZGUxZUxMTTJVSHRKT0JOK1NaLzgxQkZrQXYxNDQxN2hNdDRwU09MeEpIalBOb0FRalprUUdYUklJN0k5NE5YMnJhMHU5dDF1RzVoQUhsdWdpNEtpR3oyamFzczB3MG8yUlBSL2lIN0ExRzVBOXByaWFQVU5NT0k2V29uL3I5NTRSQ0hJTktmU3JPcHJsMk9mbWtPeGhwSHc0QkxLVVBsR3pncHhrZ3l5V0xVWFhYNUFtcytvaWhoNW9PTTZ1NFhoamRKdFZHN1RrRkF4dnIydVZCajZRY2dhOGNqeXNZcm9RSDNkUnhhaTdtTkprL1haL2NxV0kxUUtqdjlmSWVxenp2S0VURStiNGxlL1Fkb2ZFSituYytSUHE4RDVTTVRjN2R2Um53TUFmOUNuamlydE9KM1AwNXFSZG9McVhYRituZUhDd0Z1OU9pK0ZJZlM4dlR0cHNoMWx5T2lQWTFwd3Q4blhuS0VHbTdJQlhOYnJ3VUJVYlh4VlZLZUJibEcwR2xXZzR2RmFuc0kzeEY1WHU2bURWVGhSMGNVZ1RkUUkwWVFXZ1ZjT1hmSkN3THlwQmUzREcrdlZ2aHVMdk9TbEE1Y1RUZzNHVFh1Y0JDSzc2OUdscmJ1RUJhSlk0b3lUYkpxU2JwYnhLOWRBQ1RNei9MSlpJeGdSaGhxZmRqNzVtMDVlUVcwNzl6c2FBV0xiSUNCRmVRUTNkWFNIcFN3KzliSVBXV0NIVVZRS0ttRFB0ZzlQNG9nMWhFTlFRNTlPZEdPUWY0UnlFc3FwWXB1SXFPMGpRcGhJZW8rODdlakk3NVlWZWJ3Y2pXWmxsSFV6eG5zakl2VDV1NU9RRGg1N1hpdEEwRzEzU2tKK0k0YWpMd1E5UVh5NzY2OEhaUnIyenowbmhmUExJQmM4UlBKUm1FUkxKMkpxMFRnY3JzdUdnK2FiQmxlWFdBNUVxelRaNU4rMktYeFRWa1FkTXp2WXA3ZUFQZk16NzFBMmZlRHhoam94eVhiODBMRGhKbzdrbjNtVW1Td3VvMG80UEQ3dkVMbEIvcTlobU10d1RFejNIRHlYK2E1YXlTUlRlWnFvNEJPZEt1ZXpXclp2QVFHaEdWWTJqemdOSVZUWXVrcGJoN3JEZW1UclE0amdZWjRYc3BQRTFBR3gybmo5d0lQYmc2RlY3SjNNWi9CQnNncXVqclYxd1JDUDR0YVZ1RDNzQTNxNUNZODRxbUN1Y3h4U0MrMUowUTIwS3R3VVRMTVkxNERJbEN2N0Ryak9vbXlEeHNXTGwvWmlWbjE0ekNxTzErL1lWTWU2ZklxM1U5SzlyQXZlVmJnMlVSMkR4MlVpNkxVRGREU3pVY3hESTVoYm9yUERkWlp1SkNVSjNyS0JHNUZEdXltYXpkWjd3ZHVQcFNUajh2Z2dyY1VuOVhhOFlNRHpydUZJbVlSZlUxWEtsQXNhYkgvVVoySFFTeVdSMXNJTWptbXh1M2o5RzArU3ZyYkhCWmJMcmErMjJyRnA1ek81Q29lUTFyc3RDa3lRanljUzczWXh2dWxUOGdySStOWS9hOWtzN2dsc2N5VVhIZXBDWFZab0ViNGFKNFdWQkhHejQvVTdab01Rb1pnYURidz09IiwiZGF0YWtleSI6IkFRRUJBSGh3bTBZYUlTSmVSdEptNW4xRzZ1cWVla1h1b1hYUGU1VUZjZTlScTgvMTR3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURKNWNCMEF0WFY5SUg0RkFld0lCRUlBN01WelNZNk1WeFlrSjY2cnA5SUM1UDZMbm5OdklJTnBXM01MaE5zRUtHQlA0YjhsL29JWnozbnRrQkxja3Y4aDR5citmdlRuczhIdXUxNm89IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTkyNDQ1MjcyfQ== https://853973692277.dkr.ecr.us-east-1.amazonaws.com
"

                        docker login -u AWS -p ${AWS_PWD}
                        //sh "`aws ecr get-login --registry-ids 853973692277 --no-include-email --region us-east-1`"
                        sh "docker tag ${customLocalImage} ${ECR_URL}/${ECR_REPO}:${buildTag}"
                        sh "docker tag ${customLocalImage} ${ECR_URL}/${ECR_REPO}:latest"
                        echo "${ECR_URL}/${ECR_REPO}"
                        sh "docker push ${ECR_URL}/${ECR_REPO}"

                    } else if (branch == 'master') {
                        sh "docker tag ${customLocalImage} ${dockerPublisherName}/${dockerRepoName}:build-${BUILD_NUMBER}"
                        sh "docker tag ${customLocalImage} ${dockerPublisherName}/${dockerRepoName}:latest"
                        sh "docker push ${dockerPublisherName}/${dockerRepoName}"
                    } else if (branch == 'develop') {
                        echo "It is a ${branch} branch"
                    } else if (branch.contains('feature')) {
                        echo "It is a ${branch} branch"
                    }
                }
            }
        }
    }
}

