def gitRepoName = "https://github.com/chandraleka16/springboot-jenkins.git"

def customLocalImage = "springboot-app"

def dockerPublisherName = "chandraleka1403"
def dockerRepoName = "springboot-app"

properties([pipelineTriggers([githubPush()])])

pipeline {
    agent {
        node {
            label 'slave2'
        }
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "**", url: "${gitRepoName}"
                script {
                    branch = "${GIT_BRANCH}".split('/')[0]
                }
                echo "CHECKING OUT BRANCH:${branch}"
            }
        }

        stage('Build') {
            steps {
                script {
                    if (branch.contains('release') || branch == 'master'){
                        
                        sh "docker rmi ${customLocalImage} || true"
                        sh "docker build -t ${customLocalImage} ."
                        echo "Build Successul"
                    } else if (branch == 'qa' || branch == 'develop') {
                        echo "It is a ${branch} branch"
                    } else if (gitBranch.contains('feature')) {
                        echo "It is a ${branch} branch"
                    }
                }
            }
        }

        stage('Publish') {
            steps {
                script {
                    if (branch.contains('release')){
                        def gitTag = "build-${BUILD_NUMBER}"
                        def gitUrl = "https://chandraleka16:Mano3Logesh@github.com/chandraleka16/springboot-jenkins.git"

                        sh "git tag ${gitTag}"
                        sh "git push ${gitUrl} ${gitTag}"

                   //     sh "`aws ecr get-login --registry-ids ${env.AWS_ACCESS_KEY_ID} --no-include-email --region us-east-1`"
                        sh "docker tag ${customLocalImage} ${env.ECR_URL}/${env.ECR_REPO}:${buildTag}"
                        sh "docker tag ${customLocalImage} ${env.ECR_URL}/${env.ECR_REPO}:latest"
                        echo "${env.ECR_URL}/${env.ECR_REPO}"
                        sh "docker push ${env.ECR_URL}/${env.ECR_REPO}"

                    } else if (branch == 'master') {
                        sh "docker tag ${customLocalImage} ${dockerPublisherName}/${dockerRepoName}:build-${BUILD_NUMBER}"
                        sh "docker tag ${customLocalImage} ${dockerPublisherName}/${dockerRepoName}:latest"
                        sh "docker push ${dockerPublisherName}/${dockerRepoName}"
                    } else if (branch == 'develop') {
                        echo "It is a ${branch} branch"
                    } else if (branch.contains('feature')) {
                        echo "It is a ${branch} branch"
                    }
                }
            }
        }
    }
}

